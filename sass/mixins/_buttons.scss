// creates a button style
//@mixin button($color: white, $background: $blue, $border) {
@mixin button() {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  margin-bottom: 0; // For input.btn
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  white-space: nowrap;
}

@mixin button-style($color, $background, $border, $gradient: false){
  background-color: $background;
  color: $color;
  @if $gradient {
    @include background-image(linear-gradient(lighten($background, 5%), $background));  // top, bottom color
  }
  border-color: $border;
  *border: 0;
  border-bottom-color: darken($border, 10%);
  border-color: rgba(0,0,0,0.15) rgba(0,0,0,0.15) rgba(0,0,0,0.25);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus;
       color: $color;
    }
  }

  &:active,
  &.active {
    outline: 0;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
     color: $color;
  }
  &:hover,
  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    text-decoration: none;
    background-color: darken($background, 10%);
    @if $gradient {
      @include background-image(linear-gradient(darken($background, 10%), darken($background, 5%)));  // top, bottom color
    }
        border-color: darken($border, 12%);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $background;
          border-color: $border;
      pointer-events: none; // Future-proof disabling of clicks
      @include opacity(.65);
      @include box-shadow(none);
    }
  }
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius: 0) {
  @include rem(padding, $padding-vertical $padding-horizontal);
  @include rem(font-size, $font-size);
  line-height: $line-height;
  @if $border-radius > 0 {
    @include border-radius($border-radius);
  }
  @else {
    border-radius: 0;
  }
}
